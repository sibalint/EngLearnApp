<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btl_Settings.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        8gAAAPIBlLUtiQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAPCSURBVFhHnZdP
        aFNBEMZDevQm6KngQTAVK4oIFcSLFxHvgoIFaUBqrWBta2IPirc0SOufS1soTaL1JFJED61Q9ZTWQ43N
        S9u3qa1alYJIDz14KKzzbd4m+zaTNMnhl2T3zZtvMjv7dl5ASllGJpPf7+REKpcTo0QHzQVtm0a50hvf
        E747OBaOxoYwZo2A47htFMQWIYl0NrtyjLOrh/BA7FQ4Ghfh6KAsEBtiDTWOs3LGCwBsLy66hzm7WghH
        4mdJdKckTlAmWGMTEn5vBLHA2dRCRzQ26hOnTGA5WGODoOOIVSMAubi8epKxqwoJRvzilAlaDlyjNDt7
        7Rs0uVx+wBRXLIkezrYStrjKBC2Hvo5iG6FKP2HeBEgoUiZOICjbthK2OMa2DQm5cXL8l4JQKSGC7D/3
        oGvtpoNK1CIOkIGrJedi1l5zGy5bNrWKA3w0keMPtlAVvggh9tmONPWIA/WRyYhmcvzHEqoGG0S94qD4
        g9a2NZdzJ8j5P0usEr4gGhEHZRNwSnVxLbvkXsou509TTRyBmCk+93nJF0Sj4oCdtFFBkdjLeSEnZj7J
        g5GU7J6YVkGMTU79blQcsJMcbS/yD0JJIc+Np+WBO0nZ3JeQXSNTpnDd4oCdtAkl3X6Ia8wgOocnlTgy
        wRXmbrCTJlr8wquv8vjzPBsEMmHWBOenEuykJpRw+yDWOb0u135uqm8dgB2Erol6g2AnQUsq3wuR6zPr
        cp3En87/kC00vvxmjc0ECtPeHZxfG3ZSi3cZ4hjf+/hdfvu1qYLQAeggsDs88WIQeGzj7FBnC52i3FHu
        G4CWZP42nN7wxJ/M+cXxjUxgOcxMYItaAVRiweysfOKHEqLHFH/MiGOMjKAmUJgYY4uSY9/Dahe2dY9Z
        Ek+KW3DW/a4g/qiKOK6XCtLtx/36YWUJVSNN9wV94jd3Ecdy4DoK0xTXeI9tTqxA4agv9phUIx2BUEp0
        wtl5SiecD6d5cSwHrqMwlThtUVMcqLPDFDRAIZKNer/wuu0tCmCUHjRiAw5bnwnZ/rZQ3bY4MgJx1AbG
        2CWmsAYHmC2soPbOtvXeO1K05cRDONVcfL3WkDjAKWqLe/+ctccbWCBwXwZDCTGuAzhKmUAQ+I3lgDgK
        U4nTFuUcabxCLPUTtOY0X/W1rvBhBQGwHBBHYWKMLWrfzOE1Nd6/F7OcjUnphxUEagKFqcRpl5g3VQOd
        FYkX2zsKQnfbLP4Bk4l6xDVej6kbXbT8FTvp8gkKwivMDWxR+3odNKmWH+8d9PLDv4HJwH+MQtEuhzul
        3wAAAABJRU5ErkJggg==
</value>
  </data>
</root>